env:
  PATH: "$HOME/.cargo/bin:$PATH"
  RUST_VERSION: '1.61.0'
  AWS_ACCESS_KEY_ID: ENCRYPTED[47c5a661185faab3f5dfb825bda19470532f6098dedf8a4847219bdbd0ad5bc9d7413543390f6feb17c1c2c0b1e4f3bc]
  AWS_SECRET_ACCESS_KEY: ENCRYPTED[67dc1d900976594692736ddf12e4cd4db743458315b00acc9bd7f52c0812c00a2d63e654a66ff96196facea0542b7719]

task:
  name: Build (Debian Linux)
  container:
    image: debian:10-slim
    cpu: 4
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - apt-get update && apt-get install -y --no-install-recommends git ca-certificates curl gcc libc6-dev musl-tools
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${RUST_VERSION}
    - rustup target add x86_64-unknown-linux-musl
  build_script:
    - cargo build --release --locked --target x86_64-unknown-linux-musl
  publish_script: |
    tag=$(git describe --exact-match HEAD 2>/dev/null || true)
    if [ -n "$tag" ]; then
      tarball="upload-to-s3-${tag}-x86_64-unknown-linux-musl.tar.gz"
      strip target/x86_64-unknown-linux-musl/release/upload-to-s3
      tar zcf "$tarball" -C target/x86_64-unknown-linux-musl/release upload-to-s3
      target/x86_64-unknown-linux-musl/release/upload-to-s3 -b releases.wezm.net "$tarball" "upload-to-s3/$tag/$tarball"
    fi

task:
  name: Build (FreeBSD)
  freebsd_instance:
    image_family: freebsd-13-0
    cpu: 4
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - pkg install -y git-lite
    - fetch -o - https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain ${RUST_VERSION}
  build_script:
    - cargo build --release --locked
  publish_script: |
    tag=$(git describe --exact-match HEAD 2>/dev/null || true)
    if [ -n "$tag" ]; then
      tarball="upload-to-s3-${tag}-amd64-unknown-freebsd.tar.gz"
      strip target/release/upload-to-s3
      tar zcf "$tarball" -C target/release upload-to-s3
      target/release/upload-to-s3 -b releases.wezm.net "$tarball" "upload-to-s3/$tag/$tarball"
    fi

task:
  name: Build (Mac OS)
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-base:latest
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  install_script:
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${RUST_VERSION}
    - rustup target add x86_64-apple-darwin
  build_script:
    - cargo build --release --locked
    - cargo build --release --locked --target x86_64-apple-darwin
    - mv target/release/upload-to-s3 target/release/upload-to-s3.$CIRRUS_ARCH
    - lipo target/release/upload-to-s3.$CIRRUS_ARCH target/x86_64-apple-darwin/release/upload-to-s3 -create -output target/release/upload-to-s3
    - lipo -info target/release/upload-to-s3
  publish_script: |
    tag=$(git describe --exact-match HEAD 2>/dev/null || true)
    if [ -n "$tag" ]; then
      tarball="upload-to-s3-${tag}-universal-apple-darwin.tar.gz"
      strip target/release/upload-to-s3
      tar zcf "$tarball" -C target/release upload-to-s3
      target/release/upload-to-s3 -b releases.wezm.net "$tarball" "upload-to-s3/$tag/$tarball"
    fi

task:
  name: Build (Windows)
  windows_container:
    image: cirrusci/windowsservercore:cmake
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock
  environment:
    CIRRUS_SHELL: powershell
  install_script:
    - Invoke-WebRequest -Uri https://win.rustup.rs/x86_64 -OutFile rustup-init.exe
    - .\rustup-init -y --profile minimal --default-toolchain $env:RUST_VERSION
    - git fetch --tags
  # PowerShell it truly horrific and lacks a way to exit on external command failure so we have to check after every command
  # https://stackoverflow.com/questions/48864988/powershell-with-git-command-error-handling-automatically-abort-on-non-zero-exi/48877892#48877892
  build_script: |
    ~\.cargo\bin\cargo build --release --locked
    if ($LASTEXITCODE) { Throw }
  publish_script: |
    try {
      $tag=$(git describe --exact-match HEAD 2>$null)
      if ($LASTEXITCODE) { Throw }
    } catch {
      $tag=""
    }
    if ( $tag.Length -gt 0 ) {
      $tarball="upload-to-s3-$tag-x86_64-pc-windows-msvc.zip"
      cd target\release
      strip upload-to-s3.exe
      if ($LASTEXITCODE) { Throw }
      Compress-Archive .\upload-to-s3.exe "$tarball"
      cd ..\..
      target\release\upload-to-s3 -b releases.wezm.net "target\release\$tarball" "upload-to-s3/$tag/$tarball"
      if ($LASTEXITCODE) { Throw }
    }
